---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  app.kubernetes.io/component: medis-etl-app
  app.kubernetes.io/instance: medis-etl-app
  app.kubernetes.io/name: medis-etl-app
  app.kubernetes.io/part-of: medis-etl
  app.openshift.io/runtime: java-springboot-camel
  app: "${APP_NAME}-${JOB_NAME}"
  template: "${REPO_NAME}-app-dc-template"
metadata:
  name: "${REPO_NAME}-app-dc"
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: medis-etl-pvc
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: ${DATA_VOLUME_CAPACITY}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: medis-etl-config
    data:
      medis-etl.properties: |-
        config1=test1
        config2=test2
        config3=test3
    immutable: false

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ${APP_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deployment: ${APP_NAME}-deployment
        spec:
          containers:
          - env:
            - name: DEBUG_PORT
              value: "5858"
            - name: PROJECTS_ROOT
              value: /projects
            - name: PROJECT_SOURCE
              value: /projects
            image: image-registry.openshift-image-registry.svc:5000/c2da03-tools/medis-etl-image:latest
            imagePullPolicy: Always
            name: etl-camel
            ports:
            - containerPort: 8080
              name: http-springboot
              protocol: TCP
            - containerPort: 5858
              name: debug
              protocol: TCP
            resources:
              limits:
                memory: 768Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: ${DATA_DIR}
              name: medis-etl-files
            - mountPath: ${APP_CONFIG_DIR}
              name: medis-etl-config
            - mountPath: /ssh
              name: medis-etl-ssh
              readOnly: true
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - name: medis-etl-files
            persistentVolumeClaim:
              claimName: medis-etl-pvc
          - name: medis-etl-config
            configMap:
              name: medis-etl-config
          - name: medis-etl-ssh
            secret:
              defaultMode: 400
              secretName: medis-etl
  
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP_NAME}
    spec:
      ports:
      - name: http-springboot
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: http-8081
        port: 8081
        protocol: TCP
        targetPort: 8081
      selector:
        app: medis-etl-app
        deployment: medis-etl-app-deployment
      sessionAffinity: None
  
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${APP_NAME}
    spec:
      port:
        targetPort: "8081"
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: medis-etl-app
        weight: 100
      wildcardPolicy: None
parameters:
  - name: APP_NAME
    description: Application name
    displayName: Application name
    required: true
    value: medis-etl-app
  - name: ROUTE_HOST
    description: The host the route will use to expose service outside cluster
    displayName: Route host
    required: true
  - name: ROUTE_PATH
    description: Configure the route path (ex. /pr-5 or /app), also used for VUE_APP_FRONTEND_BASEPATH
    displayName: Route path
    required: true
  - name: JOB_NAME
    description: Job identifier (i.e. 'pr-5' OR 'master')
    displayName: Job Branch Name
    required: true
  - name: IMAGE_REGISTRY
    description: The container registry
    displayName: Docker Image Registry
    required: true
    value: ghcr.io
  - name: IMAGE_NAMESPACE
    description: The image namespace
    displayName: Docker Image Namespace
    required: true
    value: bcgov
  - name: IMAGE_TAG
    description: The specific image tag to deploy
    displayName: Docker Image Tag
    required: true
    value: latest
  - name: NAMESPACE
    description: Target namespace reference (i.e. 'wfezkf-dev')
    displayName: Target Namespace
    required: true
  - name: REPO_NAME
    description: Application repository name
    displayName: Repository Name
    required: true
  - name: CPU_LIMIT
    description: Limit Peak CPU per pod (in millicores ex. 1000m)
    displayName: CPU Limit
    value: 250m
  - name: CPU_REQUEST
    description: Requested CPU per pod (in millicores ex. 500m)
    displayName: CPU Request
    value: 50m
  - name: MEMORY_LIMIT
    description: Limit Peak Memory per pod (in gigabytes Gi or megabytes Mi ex. 2Gi)
    displayName: Memory Limit
    value: 1Gi
  - name: MEMORY_REQUEST
    description: Requested Memory per pod (in gigabytes Gi or megabytes Mi ex. 500Mi)
    displayName: Memory Request
    value: 256Mi
  - name: APP_CONFIG_DIR
    description: Path to apps properties file
    displayName: Directory to mount for app config files
    required: true
    value: "/app/config"
  - name: DATA_DIR
    description: Path to data directory
    displayName: Directory to mount for data files
    required: true
    value: "/data"
  - name: DATA_VOLUME_CAPACITY
    description: Volume space available for Data
    displayName: Data Volume Capacity (use M or G, not Mi or Gi)
    required: true
    value: "1Gi"
